<!doctype html>
<html lang="ja">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>60秒診断</title>
  <script src="https://static.line-scdn.net/liff/edge/2/sdk.js"></script>
  <style>
    body { font-family: system-ui, sans-serif; margin: 16px; }
    .q { margin: 16px 0; padding: 12px; border: 1px solid #eee; border-radius: 12px; }
    button { padding: 12px 16px; border: 0; border-radius: 8px; font-size: 16px; }
    .primary { background: #06C755; color: #fff; }
    .muted { color:#666; font-size: 12px; }
  </style>
</head>
<body>
  <h1>60秒診断</h1>
  <p class="muted">※ LINEトーク内で動作中</p>

  <!-- 例：8問。値は A/B/C/D のどれかを選ぶだけ（サーバ側で採点） -->
  <div id="form">
    <div class="q">Q1: 直感と論理、どちらを信じる？<br>
      <label><input type="radio" name="q1" value="A"> 直感</label>
      <label><input type="radio" name="q1" value="B"> 論理</label>
      <label><input type="radio" name="q1" value="C"> どちらかと言えば直感</label>
      <label><input type="radio" name="q1" value="D"> どちらかと言えば論理</label>
    </div>
    <div class="q">Q2: 新しい環境は…<br>
      <label><input type="radio" name="q2" value="A"> ワクワクする</label>
      <label><input type="radio" name="q2" value="B"> 計画して臨みたい</label>
      <label><input type="radio" name="q2" value="C"> 周りと一緒に慣れる</label>
      <label><input type="radio" name="q2" value="D"> 慎重に様子見</label>
    </div>
    <!-- Q3〜Q8も同様に name="q3"〜"q8" で A/B/C/D を用意（同じ形式でOK） -->
    <div class="q">Q3: …（A/B/C/D）<br>
      <label><input type="radio" name="q3" value="A"> A</label>
      <label><input type="radio" name="q3" value="B"> B</label>
      <label><input type="radio" name="q3" value="C"> C</label>
      <label><input type="radio" name="q3" value="D"> D</label>
    </div>
    <div class="q">Q4: …（A/B/C/D）<br>
      <label><input type="radio" name="q4" value="A"> A</label>
      <label><input type="radio" name="q4" value="B"> B</label>
      <label><input type="radio" name="q4" value="C"> C</label>
      <label><input type="radio" name="q4" value="D"> D</label>
    </div>
    <div class="q">Q5: …（A/B/C/D）<br>
      <label><input type="radio" name="q5" value="A"> A</label>
      <label><input type="radio" name="q5" value="B"> B</label>
      <label><input type="radio" name="q5" value="C"> C</label>
      <label><input type="radio" name="q5" value="D"> D</label>
    </div>
    <div class="q">Q6: …（A/B/C/D）<br>
      <label><input type="radio" name="q6" value="A"> A</label>
      <label><input type="radio" name="q6" value="B"> B</label>
      <label><input type="radio" name="q6" value="C"> C</label>
      <label><input type="radio" name="q6" value="D"> D</label>
    </div>
    <div class="q">Q7: …（A/B/C/D）<br>
      <label><input type="radio" name="q7" value="A"> A</label>
      <label><input type="radio" name="q7" value="B"> B</label>
      <label><input type="radio" name="q7" value="C"> C</label>
      <label><input type="radio" name="q7" value="D"> D</label>
    </div>
    <div class="q">Q8: …（A/B/C/D）<br>
      <label><input type="radio" name="q8" value="A"> A</label>
      <label><input type="radio" name="q8" value="B"> B</label>
      <label><input type="radio" name="q8" value="C"> C</label>
      <label><input type="radio" name="q8" value="D"> D</label>
    </div>
    <button id="submit" class="primary">結果を見る</button>
  </div>

  <div id="result" style="display:none"></div>

<script>
const LIFF_ID = 'YOUR_LIFF_ID_HERE'; // ←ここを実際の LIFF ID に置き換え

function pickAnswers(){
  const arr = [];
  for (let i=1;i<=8;i++){
    const v = (document.querySelector(`input[name="q${i}"]:checked`)||{}).value;
    if(!v) return null;
    arr.push(v);
  }
  return arr;
}

async function init(){
  await liff.init({ liffId: LIFF_ID });
  if (!liff.isLoggedIn()) { liff.login(); return; }
}
init();

document.getElementById('submit').addEventListener('click', async () => {
  const answers = pickAnswers();
  if(!answers){ alert('全ての質問に回答してください'); return; }

  // LINEの userId を取得（トーク内起動時）
  const ctx = liff.getContext();
  const userId = ctx?.userId || null;

  // Vercel の API に送って採点（/api/answer は既に用意済）
  const res = await fetch('/api/answer', {
    method:'POST',
    headers:{ 'Content-Type':'application/json' },
    body: JSON.stringify({ line_user_id: userId, answers })
  }).then(r=>r.json());

  // 画面にも表示
  const box = document.getElementById('result');
  box.style.display = 'block';
  box.innerHTML = `<h2>${res.title}</h2><p>${res.body}</p><p class="muted">${res.fit}</p>`;

  // トークにも送る（どちらでも可）
  try{
    await liff.sendMessages([{ type:'text',
      text:`診断結果：${res.title}\n${res.body}`
    }]);
  }catch(e){ console.log('sendMessages error', e); }
});
</script>
</body>
</html>
